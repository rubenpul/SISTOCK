/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistock;

import com.itextpdf.text.DocumentException;
import java.awt.Color;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ruben
 */
public class frm_registropkf extends javax.swing.JFrame {

    Integer id_solicitud;
    
    public frm_registropkf() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(Color.WHITE);
        this.setTitle("SISTOCK - REGISTRO DE SOLICITUDES AL TALLER");
        this.setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_equipo = new javax.swing.JLabel();
        cmb_equipo = new javax.swing.JComboBox();
        lbl_falla = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        area_falla = new javax.swing.JTextArea();
        lbl_servicio = new javax.swing.JLabel();
        cmb_servicio = new javax.swing.JComboBox();
        lbl_componente = new javax.swing.JLabel();
        txt_componente = new javax.swing.JTextField();
        lbl_solicitante = new javax.swing.JLabel();
        txt_solicitante = new javax.swing.JTextField();
        txt_nombre = new javax.swing.JTextField();
        lbl_observaciones = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        area_observacion = new javax.swing.JTextArea();
        txt_centrocosto = new javax.swing.JTextField();
        lbl_encabezado = new javax.swing.JLabel();
        bot_guardar = new javax.swing.JButton();
        bot_limpiar = new javax.swing.JButton();
        bot_cerrar = new javax.swing.JButton();
        bot_imprimir = new javax.swing.JButton();
        lbl_centrodecosto = new javax.swing.JLabel();
        bot_actualizar = new javax.swing.JButton();
        txt_idsolicitud = new javax.swing.JTextField();
        bot_buscar = new javax.swing.JButton();
        chk_idsolicitud = new javax.swing.JCheckBox();
        lbl_fechasolicitud = new javax.swing.JLabel();
        date_fechasolicitud = new com.toedter.calendar.JDateChooser();
        lbl_cedula = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_equipo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_equipo.setText("EQUIPO");
        getContentPane().add(lbl_equipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 160, -1, -1));

        cmb_equipo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmb_equipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_equipoActionPerformed(evt);
            }
        });
        getContentPane().add(cmb_equipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 160, 220, -1));

        lbl_falla.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_falla.setText("FALLA PRESENTADA");
        getContentPane().add(lbl_falla, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 340, -1, -1));

        area_falla.setColumns(20);
        area_falla.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        area_falla.setRows(5);
        jScrollPane1.setViewportView(area_falla);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 310, 340, -1));

        lbl_servicio.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_servicio.setText("SERVICIO SOLICITADO");
        getContentPane().add(lbl_servicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 420, -1, -1));

        cmb_servicio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmb_servicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_servicioActionPerformed(evt);
            }
        });
        getContentPane().add(cmb_servicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 420, 270, -1));

        lbl_componente.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_componente.setText("COMPONENTE");
        getContentPane().add(lbl_componente, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 260, -1, -1));

        txt_componente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(txt_componente, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 260, 320, -1));

        lbl_solicitante.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_solicitante.setText("SOLICITANTE");
        getContentPane().add(lbl_solicitante, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, -1, -1));

        txt_solicitante.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_solicitante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_solicitanteKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_solicitanteKeyReleased(evt);
            }
        });
        getContentPane().add(txt_solicitante, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 90, 160, -1));

        txt_nombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 120, 340, -1));

        lbl_observaciones.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_observaciones.setText("OBSERVACIONES");
        getContentPane().add(lbl_observaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 470, -1, -1));

        area_observacion.setColumns(20);
        area_observacion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        area_observacion.setRows(5);
        jScrollPane2.setViewportView(area_observacion);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 460, 340, 70));

        txt_centrocosto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_centrocosto.setForeground(new java.awt.Color(0, 0, 255));
        txt_centrocosto.setEnabled(false);
        getContentPane().add(txt_centrocosto, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 210, 320, -1));

        lbl_encabezado.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lbl_encabezado.setForeground(new java.awt.Color(0, 0, 255));
        lbl_encabezado.setText("REGISTRO DE SERVICIOS SOLICITADOS A PKF ");
        getContentPane().add(lbl_encabezado, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, -1, -1));

        bot_guardar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        bot_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/databasesave.png"))); // NOI18N
        bot_guardar.setText("GUARDAR");
        bot_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_guardarActionPerformed(evt);
            }
        });
        getContentPane().add(bot_guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 640, -1, -1));

        bot_limpiar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        bot_limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eraser.png"))); // NOI18N
        bot_limpiar.setText("REINICIAR");
        bot_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_limpiarActionPerformed(evt);
            }
        });
        getContentPane().add(bot_limpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 640, -1, -1));

        bot_cerrar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        bot_cerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/close.png"))); // NOI18N
        bot_cerrar.setText("CERRAR");
        bot_cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_cerrarActionPerformed(evt);
            }
        });
        getContentPane().add(bot_cerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 640, -1, -1));

        bot_imprimir.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        bot_imprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/print.png"))); // NOI18N
        bot_imprimir.setText("IMPRIMIR REGISTRO");
        bot_imprimir.setEnabled(false);
        bot_imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_imprimirActionPerformed(evt);
            }
        });
        getContentPane().add(bot_imprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 640, -1, -1));

        lbl_centrodecosto.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_centrodecosto.setText("CENTRO DE COSTO");
        getContentPane().add(lbl_centrodecosto, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, -1, -1));

        bot_actualizar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        bot_actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/refresh.png"))); // NOI18N
        bot_actualizar.setText("ACTUALIZAR");
        bot_actualizar.setEnabled(false);
        bot_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_actualizarActionPerformed(evt);
            }
        });
        getContentPane().add(bot_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 640, -1, -1));

        txt_idsolicitud.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_idsolicitud.setEnabled(false);
        txt_idsolicitud.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_idsolicitudKeyPressed(evt);
            }
        });
        getContentPane().add(txt_idsolicitud, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 70, 90, -1));

        bot_buscar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        bot_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Search.png"))); // NOI18N
        bot_buscar.setText("BUSCAR");
        bot_buscar.setEnabled(false);
        bot_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_buscarActionPerformed(evt);
            }
        });
        getContentPane().add(bot_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 60, -1, -1));

        chk_idsolicitud.setBackground(new java.awt.Color(255, 255, 255));
        chk_idsolicitud.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        chk_idsolicitud.setText("NRO SOLICITUD");
        chk_idsolicitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_idsolicitudActionPerformed(evt);
            }
        });
        getContentPane().add(chk_idsolicitud, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 70, -1, 20));

        lbl_fechasolicitud.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_fechasolicitud.setText("FECHA SOLICITUD");
        getContentPane().add(lbl_fechasolicitud, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 560, -1, -1));

        date_fechasolicitud.setDateFormatString("dd/MM/yyyy");
        date_fechasolicitud.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(date_fechasolicitud, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 550, 170, 30));

        lbl_cedula.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_cedula.setText("NRO DE CEDULA");
        getContentPane().add(lbl_cedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 90, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bot_cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_cerrarActionPerformed
      this.dispose();
    }//GEN-LAST:event_bot_cerrarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        String sql;
        
        sql="SELECT id_equipo,equipo FROM tbl_equipo;"; 
        cmb_equipo = funciones.cargar_combo(cmb_equipo,sql,"Seleccione...");
        
        sql="SELECT id_servicio,descripcion FROM tbl_servicio;"; 
        cmb_servicio= funciones.cargar_combo(cmb_servicio,sql,"Seleccione...");
        
        txt_solicitante.requestFocusInWindow();
        
    }//GEN-LAST:event_formWindowOpened

    private void bot_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_guardarActionPerformed
       Integer resp;
       String fechasolicitud = "";
       
        try{
            fechasolicitud = funciones.fecha_convertir_date(date_fechasolicitud, 1);
        }
        catch(NullPointerException ex){
            fechasolicitud = "";
        }
       
        
        if (!txt_solicitante.getText().equals("") &&
            !cmb_equipo.getSelectedItem().equals("Seleccione...") &&
            !txt_componente.getText().equals("") &&
            !area_falla.getText().equals("") &&
            !cmb_servicio.getSelectedItem().equals("Seleccione...") &&
            !fechasolicitud.equals("") &&
            !area_observacion.getText().equals("") && !fechasolicitud.equals("")){
            
            taller ta = new taller(Integer.parseInt(txt_solicitante.getText().trim().toUpperCase()),
                                    txt_nombre.getText().trim().toUpperCase(),
                                    Integer.parseInt(cmb_equipo.getSelectedItem().toString().substring(0, 3).trim()),
                                    txt_componente.getText().trim().toUpperCase(),
                                    area_falla.getText().trim().toUpperCase(),
                                    Integer.parseInt(cmb_servicio.getSelectedItem().toString().substring(0, 3).trim()),    
                                    area_observacion.getText().trim().toUpperCase(),
                                    fechasolicitud,1);
            
            
            
           try {
               if(!funciones.verificar_mes_autorizacion(0,0, funciones.fecha_convertir_date(date_fechasolicitud, 2))){
                    JOptionPane.showMessageDialog(null, "EL MES DE " + funciones.descripcion_mes(String.valueOf(Integer.parseInt(funciones.fecha_convertir_date(date_fechasolicitud, 1).substring(5, 7)))) + " ESTA CERRADO CONTABLEMENTE");
                    id_solicitud = 0;
               }
               else{
                    id_solicitud = ta.actualizar_registro();
               }     
           } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, ex.getMessage());
               id_solicitud = 0;
           }
            
             if (!id_solicitud.equals(0)){ 
                    ta = new taller(id_solicitud);
                try {
                    resp = JOptionPane.showConfirmDialog(null, "DESEA IMPRIMIR LA SOLICITUD");
                    if (resp.equals(0)){
                        ta.generar_solicitudpkf();
                    }
                    else{}
                } catch (DocumentException ex) {
                    Logger.getLogger(frm_registropkf.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(frm_registropkf.class.getName()).log(Level.SEVERE, null, ex);
                }
                    bot_guardar.setEnabled(false);
                    bot_actualizar.setEnabled(true);
                    bot_imprimir.setEnabled(true);
                    bot_limpiar.setEnabled(true);
             }
        }
        else{
            JOptionPane.showMessageDialog(null,"DATOS INCOMPLETOS PARA GUARDAR");
        }
    }//GEN-LAST:event_bot_guardarActionPerformed

    private void bot_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_limpiarActionPerformed
       frm_registropkf frm = new frm_registropkf();
       frm.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_bot_limpiarActionPerformed

    private void bot_imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_imprimirActionPerformed
                taller ta = new taller(Integer.parseInt(txt_idsolicitud.getText().trim()));
                try {
                    ta.generar_solicitudpkf();
                } catch (DocumentException ex) {
                    
                } catch (IOException ex) {
                    
                }
                
    }//GEN-LAST:event_bot_imprimirActionPerformed

    private void cmb_equipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_equipoActionPerformed
        try{
            if(evt.getModifiers() != 0){
                if (!cmb_equipo.getSelectedItem().equals("Seleccione...")){
                    equipo eq = new equipo(Integer.parseInt(cmb_equipo.getSelectedItem().toString().substring(0, 3).trim()),5);
            
                    if(eq.buscar_cc_equipo()){
                        txt_centrocosto.setText(eq.getId_centrocosto() + "-" + eq.getDescripcion_centrocosto());
                    }
                } 
                else{
                    txt_centrocosto.setText("");
                }
            }
        }
        catch(NullPointerException ex){}
    }//GEN-LAST:event_cmb_equipoActionPerformed

    private void chk_idsolicitudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_idsolicitudActionPerformed
        if(chk_idsolicitud.isSelected()){
            txt_idsolicitud.setEnabled(true);
            bot_buscar.setEnabled(true);
            txt_idsolicitud.requestFocusInWindow();
        }
        else{
            txt_idsolicitud.setText("");
            txt_idsolicitud.setEnabled(false);
            bot_buscar.setEnabled(false);            
        }
    }//GEN-LAST:event_chk_idsolicitudActionPerformed

    private void bot_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_buscarActionPerformed
        String sql;
        
        Calendar cal = Calendar.getInstance();
        
        
        
        if(!txt_idsolicitud.getText().trim().equals("")){
            
            taller ta = new taller(Integer.parseInt(txt_idsolicitud.getText().trim()),5);
            
            if(ta.buscaridservicio()){
                txt_solicitante.setText(ta.getCedula().toString());
                txt_nombre.setText(ta.getNombre());
                txt_centrocosto.setText(ta.getCentrocosto());
                txt_componente.setText(ta.getComponente());

                sql="SELECT id_equipo,equipo FROM tbl_equipo;"; 
                cmb_equipo = funciones.cargar_combo(cmb_equipo,sql,ta.getEquipo());
                sql="SELECT id_servicio,descripcion FROM tbl_servicio;"; 
                cmb_servicio= funciones.cargar_combo(cmb_servicio,sql,ta.getServicio());
                
                //txt_fechasolicitud.setText();
                
                try {
                    cal.set(Integer.parseInt(ta.getFechasolicitud().substring(0, 4)),Integer.parseInt(ta.getFechasolicitud().substring(5, 7))-1,Integer.parseInt(ta.getFechasolicitud().substring(8, 10)));
                    date_fechasolicitud.setCalendar(cal);
                }catch(NullPointerException ex){
                    date_fechasolicitud.setDate(null);
                }
                //date_fechasolicitud.setDate(dateValue); 
                area_observacion.setText(ta.getObservaciones());
                area_falla.setText(ta.getFalla());
                bot_guardar.setEnabled(false);
                bot_actualizar.setEnabled(true);
                bot_imprimir.setEnabled(true);
            }
            
        }
 
    }//GEN-LAST:event_bot_buscarActionPerformed

    private void bot_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_actualizarActionPerformed
        Integer resp;
          
        
        if (!txt_solicitante.getText().equals("") &&
            !cmb_equipo.getSelectedItem().equals("Seleccione...") &&
            !txt_componente.getText().equals("") &&
            !area_falla.getText().equals("") &&
            !cmb_servicio.getSelectedItem().equals("Seleccione...") &&
            !area_observacion.getText().equals("") ){
            
            taller ta = new taller(Integer.parseInt(txt_solicitante.getText().trim().toUpperCase()),
                                    txt_nombre.getText().trim().toUpperCase(),
                                    Integer.parseInt(cmb_equipo.getSelectedItem().toString().substring(0, 3).trim()),
                                    txt_componente.getText().trim().toUpperCase(),
                                    area_falla.getText().trim().toUpperCase(),
                                    Integer.parseInt(cmb_servicio.getSelectedItem().toString().substring(0, 3).trim()),    
                                    area_observacion.getText().trim().toUpperCase(),
                                    funciones.fecha_convertir_date(date_fechasolicitud,1),
                                    Integer.parseInt(txt_idsolicitud.getText()),7);
                
            
           try {
               id_solicitud = ta.actualizar_registro();
               
               if(!txt_idsolicitud.getText().equals("")){
                  id_solicitud = Integer.parseInt(txt_idsolicitud.getText());
               }
               
           } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, ex.getMessage());
               id_solicitud = 0;
           }
            
           if (!id_solicitud.equals(0)){ 
                ta = new taller(id_solicitud);
                try {
                    resp = JOptionPane.showConfirmDialog(null, "DESEA IMPRIMIR LA SOLICITUD");
                    if (resp.equals(0)){
                        ta.generar_solicitudpkf();
                    }
                    else{}
                } catch (DocumentException ex) {
                    Logger.getLogger(frm_registropkf.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(frm_registropkf.class.getName()).log(Level.SEVERE, null, ex);
                }
                    bot_guardar.setEnabled(false);
                    bot_limpiar.setEnabled(true);
             }
        }
        else{
            JOptionPane.showMessageDialog(null,"DATOS INCOMPLETOS PARA GUARDAR");
        }
    }//GEN-LAST:event_bot_actualizarActionPerformed

    private void cmb_servicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_servicioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_servicioActionPerformed

    private void txt_idsolicitudKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_idsolicitudKeyPressed
        if (evt.getKeyCode()==10){
            bot_buscar.doClick();
        }
        
        if ( ( (evt.getKeyCode() >= 48 ) && (evt.getKeyCode() <= 57 ) ) || ( (evt.getKeyCode() >= 37 ) && (evt.getKeyCode() <= 40 ) ) || ((evt.getKeyCode() >= 96 ) && (evt.getKeyCode() <= 105 )) || (evt.getKeyCode() == 144) || (evt.getKeyCode() == 127) || (evt.getKeyCode() == 8)  || (evt.getKeyCode() == 10)){       
        }
        else{
             if (evt.getKeyCode() == 27){
         
                    bot_limpiar.doClick();
                    
             }
             else{
                JOptionPane.showMessageDialog(null, "CARACTER NO VALIDO. SOLO NÚMEROS (1..9)", "SISTOCK - USUARIO", JOptionPane.ERROR_MESSAGE,null);
                txt_idsolicitud.setText("");
             }   
        }
    }//GEN-LAST:event_txt_idsolicitudKeyPressed

    private void txt_solicitanteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_solicitanteKeyPressed
        
        if ( ( (evt.getKeyCode() >= 48 ) && (evt.getKeyCode() <= 57 ) ) || ( (evt.getKeyCode() >= 37 ) && (evt.getKeyCode() <= 40 ) ) || ((evt.getKeyCode() >= 96 ) && (evt.getKeyCode() <= 105 )) || (evt.getKeyCode() == 144) || (evt.getKeyCode() == 127) || (evt.getKeyCode() == 8)  || (evt.getKeyCode() == 10)){       
            
        }
        else{
             if (evt.getKeyCode() == 27){
         
                    bot_limpiar.doClick();
                    
             }
             else{
                JOptionPane.showMessageDialog(null, "CARACTER NO VALIDO. SOLO NÚMEROS (1..9)", "SISTOCK - USUARIO", JOptionPane.ERROR_MESSAGE,null);
                txt_idsolicitud.setText("");
             }   
        }
    }//GEN-LAST:event_txt_solicitanteKeyPressed

    private void txt_solicitanteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_solicitanteKeyReleased
            try {
                taller ta = new taller(Integer.parseInt(txt_solicitante.getText().trim()),9,"Nombre");
            
            
                if(ta.buscarnombresolicitante()){
                    txt_solicitante.setText(ta.getCedula().toString());
                    txt_nombre.setText(ta.getNombre());
                    txt_nombre.setEnabled(false);
                        
                }
                else{
                    txt_nombre.setEnabled(true);
                    txt_nombre.setText("");
                }
            } catch (SQLException ex) {
                Logger.getLogger(frm_registropkf.class.getName()).log(Level.SEVERE, null, ex);
            }
            catch (NumberFormatException ex) {
                txt_nombre.setEnabled(true);
                txt_nombre.setText("");
            }
    }//GEN-LAST:event_txt_solicitanteKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_registropkf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_registropkf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_registropkf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_registropkf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_registropkf().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area_falla;
    private javax.swing.JTextArea area_observacion;
    private javax.swing.JButton bot_actualizar;
    private javax.swing.JButton bot_buscar;
    private javax.swing.JButton bot_cerrar;
    private javax.swing.JButton bot_guardar;
    private javax.swing.JButton bot_imprimir;
    private javax.swing.JButton bot_limpiar;
    private javax.swing.JCheckBox chk_idsolicitud;
    private javax.swing.JComboBox cmb_equipo;
    private javax.swing.JComboBox cmb_servicio;
    private com.toedter.calendar.JDateChooser date_fechasolicitud;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_cedula;
    private javax.swing.JLabel lbl_centrodecosto;
    private javax.swing.JLabel lbl_componente;
    private javax.swing.JLabel lbl_encabezado;
    private javax.swing.JLabel lbl_equipo;
    private javax.swing.JLabel lbl_falla;
    private javax.swing.JLabel lbl_fechasolicitud;
    private javax.swing.JLabel lbl_observaciones;
    private javax.swing.JLabel lbl_servicio;
    private javax.swing.JLabel lbl_solicitante;
    private javax.swing.JTextField txt_centrocosto;
    private javax.swing.JTextField txt_componente;
    private javax.swing.JTextField txt_idsolicitud;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_solicitante;
    // End of variables declaration//GEN-END:variables
}

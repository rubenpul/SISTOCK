/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistock;

import java.awt.Color;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.io.File;
import java.io.IOException;
import java.util.Calendar;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;

/**
 *
 * @author ruben
 */
public class frm_carganacional extends javax.swing.JFrame {

    /**
     * Creates new form frm_carga
     */
    public frm_carganacional() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(Color.WHITE);
        this.setExtendedState(MAXIMIZED_BOTH);
        
        String sql;
        this.setTitle("SISTOCK - CARGA DE STOCK");
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radio_grupo = new javax.swing.ButtonGroup();
        lbl_encabezado = new javax.swing.JLabel();
        lbl_mes = new javax.swing.JLabel();
        lbl_cantregistro = new javax.swing.JLabel();
        lbl_registro = new javax.swing.JLabel();
        lbl_resumen = new javax.swing.JLabel();
        bot_guardar = new javax.swing.JButton();
        bot_limpiar = new javax.swing.JButton();
        bot_cerrar = new javax.swing.JButton();
        bot_precarga = new javax.swing.JButton();
        lbl_desmes = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_resumen = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        radio_cargarmes = new javax.swing.JRadioButton();
        lbl_seleccionarcargar = new javax.swing.JLabel();
        txt_nombrearchivocargar = new javax.swing.JTextField();
        bot_cargararchivo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        radio_cargarmesact = new javax.swing.JRadioButton();
        cmb_mesact = new javax.swing.JComboBox();
        cmb_anoact = new javax.swing.JComboBox();
        lbl_anoact = new javax.swing.JLabel();
        lbl_mesact = new javax.swing.JLabel();
        lbl_seleccionaract = new javax.swing.JLabel();
        txt_nombrearchivocargaract = new javax.swing.JTextField();
        bot_cargararchivoact = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_encabezado.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        lbl_encabezado.setForeground(new java.awt.Color(0, 0, 255));
        lbl_encabezado.setText("CARGA / ACTUALIZACION DE ARCHIVOS DE STOCK NACIONAL");
        getContentPane().add(lbl_encabezado, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        lbl_mes.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_mes.setForeground(new java.awt.Color(0, 0, 255));
        lbl_mes.setText("Mes a Cargar");
        getContentPane().add(lbl_mes, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 200, -1, -1));

        lbl_cantregistro.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_cantregistro.setForeground(new java.awt.Color(0, 0, 255));
        lbl_cantregistro.setText("Cantidad de Registros a Almacenar");
        getContentPane().add(lbl_cantregistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 200, -1, -1));

        lbl_registro.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(lbl_registro, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 230, -1, -1));

        lbl_resumen.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_resumen.setForeground(new java.awt.Color(0, 0, 255));
        lbl_resumen.setText("RESUMEN DE DATOS");
        getContentPane().add(lbl_resumen, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 250, -1, -1));

        bot_guardar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        bot_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/databasesave.png"))); // NOI18N
        bot_guardar.setText("GUARDAR EN BD");
        bot_guardar.setEnabled(false);
        bot_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_guardarActionPerformed(evt);
            }
        });
        getContentPane().add(bot_guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 650, -1, -1));

        bot_limpiar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        bot_limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eraser.png"))); // NOI18N
        bot_limpiar.setText("REINICIAR");
        bot_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_limpiarActionPerformed(evt);
            }
        });
        getContentPane().add(bot_limpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 650, -1, -1));

        bot_cerrar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        bot_cerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/close.png"))); // NOI18N
        bot_cerrar.setText("CERRAR");
        bot_cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_cerrarActionPerformed(evt);
            }
        });
        getContentPane().add(bot_cerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 650, -1, -1));

        bot_precarga.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        bot_precarga.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/preload.png"))); // NOI18N
        bot_precarga.setText("PRECARGA DE DATOS");
        bot_precarga.setEnabled(false);
        bot_precarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_precargaActionPerformed(evt);
            }
        });
        getContentPane().add(bot_precarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 650, -1, -1));

        lbl_desmes.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(lbl_desmes, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 230, -1, -1));

        table_resumen.setBackground(new java.awt.Color(240, 255, 255));
        table_resumen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MATERIAL", "DESCRIPCION", "COSTO", "CANTIDAD", "UNIDAD METRICA", "VALOR", "TASA", "FECHA CONTAB", "MES", "AÃ‘O", "PUESTO DE DESCARGA", "MONTO TOTAL FACTURA", "CENTRO DE COSTO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_resumen);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 1350, 370));

        jPanel1.setBackground(new java.awt.Color(240, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        radio_cargarmes.setBackground(new java.awt.Color(240, 255, 255));
        radio_grupo.add(radio_cargarmes);
        radio_cargarmes.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radio_cargarmes.setSelected(true);
        radio_cargarmes.setText("CARGAR NUEVO MES STOCK");
        radio_cargarmes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_cargarmesActionPerformed(evt);
            }
        });
        jPanel1.add(radio_cargarmes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        lbl_seleccionarcargar.setBackground(new java.awt.Color(240, 255, 255));
        lbl_seleccionarcargar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_seleccionarcargar.setForeground(new java.awt.Color(0, 0, 255));
        lbl_seleccionarcargar.setText("Seleccionar archivo a cargar");
        jPanel1.add(lbl_seleccionarcargar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        txt_nombrearchivocargar.setBackground(new java.awt.Color(240, 255, 255));
        txt_nombrearchivocargar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_nombrearchivocargar.setEnabled(false);
        jPanel1.add(txt_nombrearchivocargar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 230, -1));

        bot_cargararchivo.setBackground(new java.awt.Color(240, 255, 255));
        bot_cargararchivo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        bot_cargararchivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/select.png"))); // NOI18N
        bot_cargararchivo.setText("SELECCIONAR");
        bot_cargararchivo.setSelected(true);
        bot_cargararchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_cargararchivoActionPerformed(evt);
            }
        });
        jPanel1.add(bot_cargararchivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 460, 140));

        jPanel2.setBackground(new java.awt.Color(240, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        radio_cargarmesact.setBackground(new java.awt.Color(240, 255, 255));
        radio_grupo.add(radio_cargarmesact);
        radio_cargarmesact.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        radio_cargarmesact.setText("ACTUALIZAR MES STOCK CARGADO");
        radio_cargarmesact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_cargarmesactActionPerformed(evt);
            }
        });
        jPanel2.add(radio_cargarmesact, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        cmb_mesact.setBackground(new java.awt.Color(240, 255, 255));
        cmb_mesact.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmb_mesact.setEnabled(false);
        cmb_mesact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_mesactActionPerformed(evt);
            }
        });
        jPanel2.add(cmb_mesact, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 140, -1));

        cmb_anoact.setBackground(new java.awt.Color(240, 255, 255));
        cmb_anoact.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmb_anoact.setEnabled(false);
        jPanel2.add(cmb_anoact, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 110, -1));

        lbl_anoact.setBackground(new java.awt.Color(240, 255, 255));
        lbl_anoact.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_anoact.setText("AÃ‘O");
        jPanel2.add(lbl_anoact, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, -1, -1));

        lbl_mesact.setBackground(new java.awt.Color(240, 255, 255));
        lbl_mesact.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_mesact.setText("MES");
        jPanel2.add(lbl_mesact, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        lbl_seleccionaract.setBackground(new java.awt.Color(240, 255, 255));
        lbl_seleccionaract.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_seleccionaract.setForeground(new java.awt.Color(0, 0, 255));
        lbl_seleccionaract.setText("Seleccionar archivo a cargar");
        jPanel2.add(lbl_seleccionaract, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        txt_nombrearchivocargaract.setBackground(new java.awt.Color(240, 255, 255));
        txt_nombrearchivocargaract.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_nombrearchivocargaract.setEnabled(false);
        jPanel2.add(txt_nombrearchivocargaract, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 230, -1));

        bot_cargararchivoact.setBackground(new java.awt.Color(240, 255, 255));
        bot_cargararchivoact.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        bot_cargararchivoact.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/select.png"))); // NOI18N
        bot_cargararchivoact.setText("SELECCIONAR");
        bot_cargararchivoact.setEnabled(false);
        bot_cargararchivoact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bot_cargararchivoactActionPerformed(evt);
            }
        });
        jPanel2.add(bot_cargararchivoact, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 50, 500, 140));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bot_cargararchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_cargararchivoActionPerformed
            
            JFileChooser fichero = new JFileChooser();
            DefaultTableModel modelotabla = (DefaultTableModel) table_resumen.getModel();
            String archivo;
            String direccion;
            Integer respuesta;
            
            //fichero.setCurrentDirectory(new File("Z:\\FotoPerCurso"));
            FileNameExtensionFilter filter = new FileNameExtensionFilter("EXCEL file", "xls");
            fichero.setFileFilter(filter);

            respuesta = fichero.showOpenDialog(this);
            modelotabla.setRowCount(0);
             bot_guardar.setEnabled(false);
            if (respuesta.equals(0)){
                
                archivo = fichero.getSelectedFile().getName();
                direccion = fichero.getSelectedFile().getPath();
                txt_nombrearchivocargar.setText(direccion);
                bot_precarga.setEnabled(true);
                lbl_desmes.setText("");
                lbl_registro.setText("");  
            }    
            else{
                txt_nombrearchivocargar.setText("");
                bot_precarga.setEnabled(false);
                bot_guardar.setEnabled(false);
                lbl_desmes.setText("");
                lbl_registro.setText("");
            }
       
    }//GEN-LAST:event_bot_cargararchivoActionPerformed

    private void bot_precargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_precargaActionPerformed
          
        Integer j=0;
        Boolean bandera;
        bandera = true;
        String celda_mes=null;
        String celda_ano=null;
        Locale reg =  Locale.getDefault();
        Workbook libroexcel;
        Integer tmp;
        Double tmp_double;
        
        equipo eq;
        Integer resp;
        String fecha;
        
        try {
            
            DefaultTableModel modelotabla = (DefaultTableModel) table_resumen.getModel();
            
            if (radio_cargarmes.isSelected()){    
                libroexcel = Workbook.getWorkbook(new File(txt_nombrearchivocargar.getText()));
            }            
            else{
                libroexcel = Workbook.getWorkbook(new File(txt_nombrearchivocargaract.getText()));
            }
           
            Sheet hoja = libroexcel.getSheet(0);
           
            
            j=1;
            
            //VERIFICAR SI HAY MES CARGADO
                
                celda_mes = hoja.getCell(8,j).getContents().trim();
                celda_ano = hoja.getCell(9,j).getContents().trim();
                
                if (funciones.descripcion_mes_num(celda_mes) < 10){
                    fecha = celda_ano + "-0" + funciones.descripcion_mes_num(celda_mes) + "-01";
                }
                else{
                    fecha = celda_ano + "-" + funciones.descripcion_mes_num(celda_mes) + "-01";
                }
                
                if (radio_cargarmes.isSelected()){ 
                                            
                    stock st = new stock(celda_mes,celda_ano);
                
                    if (st.buscarstocknacional()){
                        modelotabla.setRowCount(0);
                        JOptionPane.showMessageDialog(null, "EXISTEN DATOS EN EL MES DE " + celda_mes + " EN LA BASE DE DATOS");
                        bandera = false;
                    }
                    else{
                        if(!funciones.verificar_mes_autorizacion(funciones.descripcion_mes_num(celda_mes),Integer.parseInt(celda_ano), "")){
                             JOptionPane.showMessageDialog(null, "EL MES DE " + celda_mes + " ESTA CERRADO CONTABLEMENTE");
                             bandera = false;
                        }
                    }
                }
                        
            while(bandera){
               
                try{ //VALIDAR DATO MATERIAL
                    tmp = Integer.parseInt(hoja.getCell(0,j).getContents().trim());
                }
                catch(NumberFormatException ex){
                    JOptionPane.showMessageDialog(null, "EL DATO DE MATERIAL EN LA FILA " + j + " ESTA ERRADO");
                    bandera = false;
                }
                  
                  
                try{ //VALIDAR CANTIDAD RECIBIDA
                    tmp = Integer.parseInt(hoja.getCell(3,j).getContents().trim());
                }
                catch(NumberFormatException ex){
                    JOptionPane.showMessageDialog(null, "EL FORMATO DEL CAMPO DE CANTIDAD RECIBIDA EN LA FILA " + j + " ESTA ERRADO");
                    bandera = false;
                }
                
                eq = new equipo(hoja.getCell(10,j).getContents().trim(),2);
                
                    if(!eq.buscar_descripcion_equipo()){
                        resp = JOptionPane.showConfirmDialog(null, "EL EQUIPO " + hoja.getCell(10,j).getContents().trim() + " EN LA FILA " + j + " NO EXISTE EN LA BASE DE DATOS. DESEA AGREGARLO");
                   
                        if (resp.equals(0)){
                            frm_equipo frm = new frm_equipo();
                            frm.setVisible(true);
                            frm.txt_equipo.setText(hoja.getCell(10,j).getContents().trim());
                            frm.bot_buscar.doClick();
                            modelotabla.setRowCount(0);
                        }
                        bandera = false;
                    }        
                 
                eq = new equipo(hoja.getCell(10,j).getContents().trim(),6);    
                
                eq.buscar_cc_equipo();
                
                
                    
                if (!reg.getCountry().equals("VE")){
                                        
                    
                    try{ //VALIDAR VALOR
                          tmp_double = Double.parseDouble(hoja.getCell(5,j).getContents().trim().replace(",", ""));
                    }
                    catch(NumberFormatException ex){
                        JOptionPane.showMessageDialog(null, "EL FORMATO DEL CAMPO DE VALOR EN LA FILA " + j + " ESTA ERRADO");
                        bandera = false;
                    }
                                        
                    try{ //VALIDAR TASA
                          tmp_double = Double.parseDouble(hoja.getCell(6,j).getContents().trim().replace(",", ""));
                    }
                    catch(NumberFormatException ex){
                        JOptionPane.showMessageDialog(null, "EL FORMATO DEL CAMPO DE TASA EN $ EN LA FILA " + j + " ESTA ERRADO");
                        bandera = false;
                    }

                    try{ //VALIDAR MONTO TOTAL
                          tmp_double = Double.parseDouble(hoja.getCell(11,j).getContents().trim().replace(",", ""));
                    }
                    catch(NumberFormatException ex){
                        JOptionPane.showMessageDialog(null, "EL FORMATO DEL CAMPO DE MONTO TOTAL EN LA FILA " + j + " ESTA ERRADO");
                        bandera = false;
                    }
                    
                            
                    if (bandera){
                        modelotabla.addRow(new Object[]{
                        hoja.getCell(0,j).getContents().trim().toUpperCase(),
                        hoja.getCell(1,j).getContents().trim().toUpperCase(),
                        hoja.getCell(2,j).getContents().trim().toUpperCase(),
                        hoja.getCell(3,j).getContents().trim().toUpperCase(),
                        hoja.getCell(4,j).getContents().trim().toUpperCase(),
                        hoja.getCell(5,j).getContents().trim().toUpperCase().replace(",", ""),
                        hoja.getCell(6,j).getContents().trim().toUpperCase().replace(",", ""),
                        fecha,
                        hoja.getCell(8,j).getContents().trim().toUpperCase(),
                        hoja.getCell(9,j).getContents().trim().toUpperCase(),
                        hoja.getCell(10,j).getContents().trim().toUpperCase(),
                        hoja.getCell(11,j).getContents().trim().toUpperCase().replace(",", ""),
                        eq.getId_centrocosto()
                        });
                    }   
                }    
                else{
                    
                    try{ //VALIDAR VALOR
                          tmp_double = Double.parseDouble(hoja.getCell(5,j).getContents().trim().replace(".", "").replace(",","."));
                    }
                    catch(NumberFormatException ex){
                        JOptionPane.showMessageDialog(null, "EL FORMATO DEL CAMPO DE VALOR EN LA FILA " + j + " ESTA ERRADO");
                        bandera = false;
                    }
                                        
                    try{ //VALIDAR TASA $
                          tmp_double = Double.parseDouble(hoja.getCell(6,j).getContents().trim().replace(".", "").replace(",","."));
                    }
                    catch(NumberFormatException ex){
                        JOptionPane.showMessageDialog(null, "EL FORMATO DEL CAMPO DE TASA EN LA FILA " + j + " ESTA ERRADO");
                        bandera = false;
                    }

                     
                    try{ //VALIDAR MONTO TOTAL FACTURA $
                       tmp_double = Double.parseDouble(hoja.getCell(11,j).getContents().trim().replace(".", "").replace(",","."));
                    }
                    catch(NumberFormatException ex){
                       JOptionPane.showMessageDialog(null, "EL FORMATO DEL CAMPO DE MONTO TOTAL FACTURA EN LA FILA " + j + " ESTA ERRADO");
                       bandera = false;
                    } 

         
                    if (bandera){
                        modelotabla.addRow(new Object[]{
                        hoja.getCell(0,j).getContents().trim().toUpperCase(),
                        hoja.getCell(1,j).getContents().trim().toUpperCase(),
                        hoja.getCell(2,j).getContents().trim().toUpperCase(),
                        hoja.getCell(3,j).getContents().trim().toUpperCase(),
                        hoja.getCell(4,j).getContents().trim().toUpperCase(),
                        hoja.getCell(5,j).getContents().trim().toUpperCase().replace(".", "").replace(",","."),
                        hoja.getCell(6,j).getContents().trim().toUpperCase().replace(".", "").replace(",","."),
                        fecha,
                        hoja.getCell(8,j).getContents().trim().toUpperCase(),
                        hoja.getCell(9,j).getContents().trim().toUpperCase(),
                        hoja.getCell(10,j).getContents().trim().toUpperCase(),
                        hoja.getCell(11,j).getContents().trim().toUpperCase().replace(".", "").replace(",","."),
                        eq.getId_centrocosto()
                        });
                    }   
                }

                if ((!hoja.getCell(8,j).getContents().trim().equals(celda_mes)) && (!hoja.getCell(9,j).getContents().trim().equals(celda_ano)) ){
                    bandera = false;
                    JOptionPane.showMessageDialog(null, "REVISAR FILA " + j + ". TIENE UN MES O AÃ‘O DIFERENTE");
                }
                              
                j++;
                              
            }
                      
            
        } catch (IOException ex) {
            Logger.getLogger(frm_carganacional.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BiffException ex) {
            Logger.getLogger(frm_carganacional.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ArrayIndexOutOfBoundsException ex){
                j--;
                lbl_registro.setText(String.valueOf(table_resumen.getRowCount()));
                lbl_desmes.setText(celda_mes);
                bot_guardar.setEnabled(true);
                bot_precarga.setEnabled(false);
        }
       
    }//GEN-LAST:event_bot_precargaActionPerformed

    private void bot_cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_cerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_bot_cerrarActionPerformed

    private void bot_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_guardarActionPerformed
        
        Boolean resp;
        
        stock ex = new stock(table_resumen);
        
        if (radio_cargarmesact.isSelected()){
            resp = ex.borrar_mes_stocknacional(cmb_mesact.getSelectedItem().toString().trim(),Integer.parseInt(cmb_anoact.getSelectedItem().toString()));
            
            if (resp){
               resp = ex.cargar_bdnacional();
            
                if (resp){
                    JOptionPane.showMessageDialog(null, "ACTUALIZADO SATISFACTORIAMENTR EXITOSAMENTE LOS DATOS CORRESPONDONDIENTE AL MES DE " + lbl_desmes.getText() + " CANTIDAD DE REGISTROS " + lbl_registro.getText());
                    bot_guardar.setEnabled(false);
                }   
            }   
        }
        else{
            
            resp = ex.cargar_bdnacional();
            
            if (resp){
               JOptionPane.showMessageDialog(null, "CARGADO EXITOSAMENTE LOS DATOS CORRESPONDONDIENTE AL MES DE " + lbl_desmes.getText() + " CANTIDAD DE REGISTROS " + lbl_registro.getText());
               bot_guardar.setEnabled(false);
            }   
        }
    
    }//GEN-LAST:event_bot_guardarActionPerformed

    private void bot_cargararchivoactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_cargararchivoactActionPerformed
            JFileChooser fichero = new JFileChooser();
            DefaultTableModel modelotabla = (DefaultTableModel) table_resumen.getModel();
            String archivo;
            String direccion;
            Integer respuesta;
            
            //fichero.setCurrentDirectory(new File("Z:\\FotoPerCurso"));
            FileNameExtensionFilter filter = new FileNameExtensionFilter("EXCEL file", "xls");
            fichero.setFileFilter(filter);

            respuesta = fichero.showOpenDialog(this);
            modelotabla.setRowCount(0);
            bot_guardar.setEnabled(false);
            if (respuesta.equals(0)){
                
                archivo = fichero.getSelectedFile().getName();
                direccion = fichero.getSelectedFile().getPath();
                txt_nombrearchivocargaract.setText(direccion);
                bot_precarga.setEnabled(true);
                lbl_desmes.setText("");
                lbl_registro.setText("");
                
            }    
            else{
                txt_nombrearchivocargaract.setText("");
                bot_precarga.setEnabled(false);
                bot_guardar.setEnabled(false);
                lbl_desmes.setText("");
                lbl_registro.setText("");
            }
    }//GEN-LAST:event_bot_cargararchivoactActionPerformed

    private void radio_cargarmesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_cargarmesActionPerformed
        DefaultTableModel modelotabla = (DefaultTableModel) table_resumen.getModel();
        bot_cargararchivo.setEnabled(true);
        bot_cargararchivoact.setEnabled(false);
        txt_nombrearchivocargaract.setText("");
        cmb_mesact.setSelectedItem("Seleccione...");
        cmb_mesact.setEnabled(false);
        cmb_anoact.setSelectedItem("Seleccione...");
        cmb_anoact.setEnabled(false);
        modelotabla.setRowCount(0);
        bot_guardar.setEnabled(false);
        bot_precarga.setEnabled(false);
        lbl_desmes.setText("");
        lbl_registro.setText("");
        
    }//GEN-LAST:event_radio_cargarmesActionPerformed

    private void radio_cargarmesactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_cargarmesactActionPerformed
        DefaultTableModel modelotabla = (DefaultTableModel) table_resumen.getModel();
        bot_cargararchivo.setEnabled(false);
        txt_nombrearchivocargar.setText("");
        bot_cargararchivoact.setEnabled(true);
        cmb_mesact.setEnabled(true);
        cmb_anoact.setEnabled(true);
        modelotabla.setRowCount(0);
        bot_precarga.setEnabled(false);
        bot_guardar.setEnabled(false);
        lbl_desmes.setText("");
        lbl_registro.setText("");
    }//GEN-LAST:event_radio_cargarmesactActionPerformed

    private void cmb_mesactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_mesactActionPerformed
        String sql;
        
       if(evt.getModifiers() != 0){
            sql = "SELECT DISTINCT YEAR(fecha_contab) AS ano, 'Cadena' as Cadena "; 
            sql += "FROM tbl_matycon "; 
            sql += "WHERE MONTH(fecha_contab) = " + funciones.descripcion_mes_num(cmb_mesact.getSelectedItem().toString());
            sql += " ORDER BY YEAR(fecha_contab) DESC;";
        
            cmb_anoact = funciones.cargar_combo(cmb_anoact,sql,"Seleccione...");
       }      
    }//GEN-LAST:event_cmb_mesactActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       String sql;
        
        sql="SELECT DISTINCT MONTH(fecha_contab) AS mes FROM tbl_matycon ORDER BY MONTH(fecha_contab);"; 
        cmb_mesact = funciones.cargar_combo_mes(cmb_mesact,sql,"Seleccione...");
    }//GEN-LAST:event_formWindowOpened

    private void bot_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bot_limpiarActionPerformed
       frm_carganacional frm = new frm_carganacional();
       frm.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_bot_limpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_carganacional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_carganacional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_carganacional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_carganacional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_carganacional().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bot_cargararchivo;
    private javax.swing.JButton bot_cargararchivoact;
    private javax.swing.JButton bot_cerrar;
    private javax.swing.JButton bot_guardar;
    private javax.swing.JButton bot_limpiar;
    private javax.swing.JButton bot_precarga;
    private javax.swing.JComboBox cmb_anoact;
    private javax.swing.JComboBox cmb_mesact;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_anoact;
    private javax.swing.JLabel lbl_cantregistro;
    private javax.swing.JLabel lbl_desmes;
    private javax.swing.JLabel lbl_encabezado;
    private javax.swing.JLabel lbl_mes;
    private javax.swing.JLabel lbl_mesact;
    private javax.swing.JLabel lbl_registro;
    private javax.swing.JLabel lbl_resumen;
    private javax.swing.JLabel lbl_seleccionaract;
    private javax.swing.JLabel lbl_seleccionarcargar;
    private javax.swing.JRadioButton radio_cargarmes;
    private javax.swing.JRadioButton radio_cargarmesact;
    private javax.swing.ButtonGroup radio_grupo;
    private javax.swing.JTable table_resumen;
    private javax.swing.JTextField txt_nombrearchivocargar;
    private javax.swing.JTextField txt_nombrearchivocargaract;
    // End of variables declaration//GEN-END:variables
}
